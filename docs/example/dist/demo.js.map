{"version":3,"file":"demo.js","sources":["../src/demo.js"],"sourcesContent":["import {i18n} from './i18n';\nimport {html, LitElement} from 'lit-element';\nimport {unsafeHTML} from 'lit-html/directives/unsafe-html.js';\nimport {ScopedElementsMixin} from '@open-wc/scoped-elements';\nimport {FileSource} from './file-source.js';\nimport * as commonUtils from 'dbp-common/utils';\n\nclass FileSourceDemo extends ScopedElementsMixin(LitElement) {\n    constructor() {\n        super();\n        this.lang = 'de';\n        this.url = '';\n    }\n\n    static get scopedElements() {\n        return {\n          'dbp-file-source': FileSource,\n        };\n    }\n\n    static get properties() {\n        return {\n            lang: { type: String },\n            url: { type: String },\n        };\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n\n        this.updateComplete.then(() => {\n            this.shadowRoot.querySelectorAll('dbp-file-source')\n                .forEach(element => {\n                    element.addEventListener('dbp-file-source-file-finished', this.addLogEntry.bind(this));\n                });\n        });\n    }\n\n    update(changedProperties) {\n        changedProperties.forEach((oldValue, propName) => {\n            if (propName === \"lang\") {\n                i18n.changeLanguage(this.lang);\n            }\n        });\n\n        super.update(changedProperties);\n    }\n\n    addLogEntry(ev) {\n        const ul = this.shadowRoot.querySelector('#log');\n        const li = document.createElement('li');\n        li.innerHTML = `<li><b>${ev.detail.status}</b> <tt>${ev.detail.filename}</tt>`;\n\n        ul.appendChild(li);\n    }\n\n    render() {\n        return html`\n            <style>\n                dbp-file-source.clean {\n                    --FUBorderWidth: initial;\n                    --FUBorderStyle: initial;\n                    --FUBorderColor: initial;\n                    --FUBorderColorHighlight: initial;\n                    --FUBorderRadius: initial;\n                    --FUMargin: initial;\n                    --FUPadding: initial;\n                    --FUWidth: initial;\n                }\n                dbp-file-source.opt {\n                    --FUBorder: 2px solid blue;\n                }\n            </style>\n \n            <section class=\"section\">\n                <div class=\"content\">\n                    <h1 class=\"title\">${i18n.t('demo-title')}</h1>\n                    <p>${unsafeHTML(i18n.t('required-server', { url: this.url}))}</p>\n                </div>\n                <div class=\"content\">\n                    <h2 class=\"subtitle\">Send files via event</h2>\n                    <p>There is no restriction for a specific file type:</p>\n                    <dbp-file-source lang=\"de\" url=\"${this.url}\" allowed-mime-types=\"*/*\"></dbp-file-source>\n                    <p>Only images are allowed here (JPG, PNG, GIF, TIF, ...):</p>\n                    <dbp-file-source lang=\"de\" url=\"${this.url}\" allowed-mime-types=\"image/*\"\n                        text=\"Abgabe nur für Bilder \"></dbp-file-source>\n                    <p>This is for PDF only:</p>\n                    <dbp-file-source lang=\"de\" url=\"${this.url}\" allowed-mime-types=\"application/pdf\"\n                        text=\"Einreichung als PDF\" button-label=\"PDF auswählen\"></dbp-file-source>\n                     <p>Text and images (JPG, PNG, GIF, TIF, ...) :</p>\n                    <dbp-file-source lang=\"de\" url=\"${this.url}\" allowed-mime-types=\"text/plain,image/*\"\n                        text=\"Abgabe für Text und Bilder \"></dbp-file-source>\n               </div>\n            </section>\n        `;\n    }\n}\n\ncommonUtils.defineCustomElement('dbp-file-source-demo', FileSourceDemo);\n"],"names":["FileSourceDemo","ScopedElementsMixin","LitElement","[object Object]","super","this","lang","url","scopedElements","dbp-file-source","FileSource","properties","type","String","connectedCallback","updateComplete","then","shadowRoot","querySelectorAll","forEach","element","addEventListener","addLogEntry","bind","changedProperties","oldValue","propName","i18n","changeLanguage","update","ev","ul","querySelector","li","document","createElement","innerHTML","detail","status","filename","appendChild","html","t","unsafeHTML","commonUtils.defineCustomElement"],"mappings":"kGAOA,MAAMA,UAAuBC,EAAoBC,IAC7CC,cACIC,QACAC,KAAKC,KAAO,KACZD,KAAKE,IAAM,GAGfC,4BACI,MAAO,CACLC,kBAAmBC,GAIzBC,wBACI,MAAO,CACHL,KAAM,CAAEM,KAAMC,QACdN,IAAK,CAAEK,KAAMC,SAIrBV,oBACIC,MAAMU,oBAENT,KAAKU,eAAeC,KAAK,KACrBX,KAAKY,WAAWC,iBAAiB,mBAC5BC,QAAQC,IACLA,EAAQC,iBAAiB,gCAAiChB,KAAKiB,YAAYC,KAAKlB,WAKhGF,OAAOqB,GACHA,EAAkBL,QAAQ,CAACM,EAAUC,KAChB,SAAbA,GACAC,EAAKC,eAAevB,KAAKC,QAIjCF,MAAMyB,OAAOL,GAGjBrB,YAAY2B,GACR,MAAMC,EAAK1B,KAAKY,WAAWe,cAAc,QACnCC,EAAKC,SAASC,cAAc,MAClCF,EAAGG,UAAY,UAAUN,EAAGO,OAAOC,kBAAkBR,EAAGO,OAAOE,gBAE/DR,EAAGS,YAAYP,GAGnB9B,SACI,OAAOsC,CAAI;;;;;;;;;;;;;;;;;;;wCAmBqBd,EAAKe,EAAE;yBACtBC,EAAWhB,EAAKe,EAAE,kBAAmB,CAAEnC,IAAKF,KAAKE;;;;;sDAKpBF,KAAKE;;sDAELF,KAAKE;;;sDAGLF,KAAKE;;;sDAGLF,KAAKE;;;;WAQ3DqC,EAAgC,uBAAwB5C"}